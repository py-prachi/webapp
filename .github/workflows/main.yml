name: Node.js Unit Tests

on: push

jobs:
  unit_test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

  integration_test:
    name: "Integration testing"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18
      - name: Install dependencies
        run: npm ci
      - name: "Execute tests"
        run: npm run inttest:ci

  e2e_test:
    name: "End to end testing"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18
      - name: Install dependencies
        run: npm ci
      - name: "Execute tests"
        run: npm run e2etest:ci

  run_migrations:
    name: "Run Migrations"
    runs-on: ubuntu-latest

    needs: [unit_test,integration_test,e2e_test]
    
    steps:
       - uses: actions/checkout@v3
       - name: Set up Node.js
         uses: actions/setup-node@v2
         with:
           node-version: 18
       - name: Set Database Environment Variables
         env:
           DATABASE_URL: ${{ secrets.DATABASE_URL }}
           DB_DATABASE: ${{ secrets.DB_DATABASE }}
           DB_HOST: ${{ secrets.DB_HOST }} 
           DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
           DB_PORT: 5432
           DB_SSL: true
         run: |
           echo "Running migrations with database environment variables"
           npm ci
           npm run migration:run 

  deploy_webapp:
    name: "Deploy webapp on render"
    runs-on: ubuntu-latest

    needs: [run_migrations]
    
    steps:
      - name: Deploy to production
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.MY_RENDER_SERVICE_ID }}
          api-key: ${{ secrets.MY_RENDER_API_KEY }}